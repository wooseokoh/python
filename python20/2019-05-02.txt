함수를 만들 때는 고려할 점.
-------------------------------
- 입력
없으면 함수명(), 있으면 함수명(x,y)
타입, 개수, 순서  
- 반환값
없으면 x(void), 있으면 return
  
=> 반환값이 없으면 print를 할 수 없음.
=> 반환값이 있으면 print할 수 있음.
 
부품(패키지 + 클래스)을 사용할 때.
--------------------------------------
- 없으면 내가 만들어 씀.
- 객체 생성
- import 
- "재사용"해서 조금 수정해서 사용(상속)

객체지향언어(OOP)
------------------------
- 오버로딩 : 하나의 이름으로 다양한 형태의 기능을 구현 (다형성)

1) 메소드이름을 동일하게 쓸 수 있다. (파이썬 사용불가)
add(a,b) add(a) add()

2) 상속을 했을 때, 부모가 사용되는 곳이 있으면 자식도 들어갈수 있다.
car = Car()
transfer(car)
transfer(truck)
개념적으로 부모클래스가 자식클래스보다 크다 따라서
부모클래스 자리에 자식도 사용할수 있음

- 오버라이딩 : 부모클래스로 부터 상속을 받은 것 중에서 기능을 재정의하여 사용 (재정의, overwrite)

ms azure
-------------
aws ec2와 같다

vm : 이름, 용량, ip, port, 접근제어, backup정책

json => vmlist : vm1, vm2, vm3, vm4
1) 키 : 값(변수)
2) 키 : 값(리스트)
3) 키 : 값(클래스, 객체)

웹만들기
----------
웹을 만들때 추상메소드를 가진 클래스를 생성 후
자식 클래스에서 상속을 받아서 사용하고 통신한다


